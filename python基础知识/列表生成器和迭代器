迭代器和生成器（generate)的理解:生成器都是迭代器.比列表推导式具有更高的效率，尤其适合大量数据的遍历。是一边循环一边计算的机制。
list,tuple,dict,string:Iterable(可迭代对象）
什么是迭代器？
1>有iter方法   2>有next方法   (有yeild就是生成器对象）

def fool():
    print('ok')
    yield 1
    print('ok2')
    yield  2
    return None
for i in fool():
    print(i)
 
##########output:
ok
1
ok2
2


列表生成器：
循环后面还可以加上if判断，例如筛选出偶数的平方
[x*x for x in range(1,11) if x%2==0]
[4,16,36,64,100]

使用两层循环呢可以生成全排列：
[m+n  for m in 'ABC' for n in 'XYZ']
['AX','AY'……]

def squared(x):
    return x*x
multiples = [squared(i) for i in range(30) if i % 3 is 0]
print (multiples)

#output:
 [0, 9, 36, 81, 144, 225, 324, 441, 576, 729]


enumerate is useful for obtaining an indexed list
enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在 for 循环当中。

shope = [['banana',10],
         ['apple',5],
         ['orange',6],
         ['watermelon',3],
         ['strawberry',15]]

for i in enumerate(shope):
    print(i[1][1])

##############output:
10
 5
 6
 3
15
###################

lst = [1,2,3,4,5,6]
for index,value in enumerate(lst):
  print ('%s,%s' % (index,value))

0,1
1,2
2,3
3,4
4,5
5,6

for index,value in enumerate(lst,3):
print ('%s,%s' % (index,value))
3,1
4,2
5,3
6,4
7,5
8,6

列表和元组：
Python 的元组与列表类似，不同之处在于元组的元素一旦初始化就不能修改 不可变的tuple有什么意义？因为tuple不可变，所以代码更安全。
元组使用小括号 ( )，列表使用方括号[ ]。
元组中只包含一个元素时，需要在元素后面添加逗号，否则括号会被当作运算符使用。

len(tuple) ：计算元组元素个数。


