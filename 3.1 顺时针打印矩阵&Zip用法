输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。
示例 1：
输入：matrix = [[1,2,3], [4,5,6], [7,8,9]]
输出：[1,2,3,6,9,8,7,4,5]
1 2 3
4 5 6
7 8 9
示例 2：
输入：matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
输出：[1,2,3,4,8,12,11,10,9,5,6,7]

#Zip:
x = [1, 2, 3]
y = [4, 5, 6]
z = [7, 8, 9]
xyz = zip(x, y, z)
print xyz

[(1, 4, 7), (2, 5, 8), (3, 6, 9)]



#分析 先向右：1,2,3；向下：6,9；向左：8,7； 向上：4,5
#输入第一行→删除第一行，逆时针旋转（倒置+逆序实现）
class Solution:
    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:
        result = []
        while matrix:
            result += matrix.pop(0)
            matrix = list(zip(*matrix))[::-1]
        return result

