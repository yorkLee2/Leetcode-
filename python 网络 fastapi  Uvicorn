Uvicorn 
1.使用 uvloop和 httptools实现一个极速的 asyncio 服务器。
2.实现一个基于 ASGI(异步服务器网关接口)的最小的应用程序接口
ASGI:
3.异步网关协议接口，一个介于网络协议服务和 Python 应用之间的标准接口，能够处理多种通用的协议类型，包括 HTTP，HTTP2 和 WebSocket。

asyncio 模块最大特点就是，只存在一个线程，跟 JavaScript 一样。
由于只有一个线程，就不可能多个任务同时运行。
asyncio 是"多任务合作"模式（cooperative multitasking），允许异步任务交出执行权给其他任务，等到其他任务完成，再收回执行权继续往下执行。
由于代码的执行权在多个任务之间交换，所以看上去好像多个任务同时运行，其实底层只有一个线程，多个任务分享运行时间






async def app(scope, receive, send):
    assert scope['type'] == 'http'
    await send({
        'type': 'http.response.start',
        'status': 200,
        'headers': [
            [b'content-type', b'text/plain'],
        ]
    })
    await send({
        'type': 'http.response.body',
        'body': b'Hello, world!',
    })


FastAPI 是一个用于构建 API 的现代、快速（高性能）的 web 框架，使用 Python 3.6+ 并基于标准的 Python 类型提示
1 快速：可与 NodeJS 和 Go 比肩的极高性能（归功于 Starlette 和 Pydantic）
  高效编码：提高功能开发速度约 200％ 至 300％
  更少 bug：减少约 40％ 的人为（开发者）导致错误。
  智能：极佳的编辑器支持。处处皆可自动补全，减少调试时间
  简单：设计的易于使用和学习，阅读文档的时间更短
  简短：使代码重复最小化。通过不同的参数声明实现丰富功能。bug 更少
  健壮：生产可用级别的代码。还有自动生成的交互式文档
  标准化：基于（并完全兼容）API 的相关开放标准：OpenAPI (以前被称为 Swagger) 和 JSON Schema。
 
get是从服务器上获取数据，post是向服务器传送数据。
使用 Get 的时候，参数会显示在地址栏上，而 Post 不会。post请求和get请求不同的地方在于post请求需要传递body参数
所以，如果这些数据是中文数据而且是非敏感数据，那么使用get；如果用户输入的数据不是中文字符而且包含敏感数据，那么还是使用 post为好。
GET用于获取信息而非修改信息。GET请求一般不应产生副作用,就像数据库查询一样，不会修改，增加数据，不会影响资源的状态。对同一URL的多个请求应该返回同样的结果。 
POST可能修改变服务器上的资源的请求。   
get方法参数都放在url里，大家都可以看到，但是post的参数都是放在请求体body中，比较隐蔽，说是比较安全.
其实从传输角度来说是因为在http网络上明文传输，都是不安全的，所以想安全只有加密，就是https。
还有一个就是数据长度的限制，url是最大2048个字符，post方法没有限制，可以是字符也可以是二进制数据 
 @app.get 
 @app.post 

如果你想修改一个设备的网络地址，比如在同一网络下，默认地址是192.168.11.164
将主机的ip地址修改为同是11段的，然后进入设备设置里面，改成自动网关，再主机换回原来地址就可以了。
ping [对应地址] 看能不能ping通

Postman:
在做接口测试的时候,Postman相当于一个客户端,它可以模拟用户发起的各类HTTP请求,将请求数据发送至服务端,获取对应的响应结果, 从而验证响应中的结果数据是否和预期值相匹配;
并确保开发人员能够及时处理接口中的bug,进而保证产品上线之后的稳定性和安全性。
可以参考的文档：https://blog.csdn.net/zong596568821xp/article/details/123395046


python: f'格式化                    eg f'/{service_name}/analyze'
格式化字符串，在编程过程中，使用占位符将指定的字符串转换为想要的格式输出，即可理解为，将字符串中的部分内容替换为某种格式的变量

my name is {1}, age{0}.format(10,'hoho')
my name is holo,age10 
格式化字符串的意思就是：先制定一个模板，然后在模板中预留几个位置，最后可以批量填上内容.

http: 500 默认代表失败;200代表成功地处理了请求


Request post方法：

request.post(url,data,json,kwargs)
data参数支持字典格式和字符串格式，用json.dumps()方法把data转换为合法的json格式字符串

import json
jsom.dump(data)





