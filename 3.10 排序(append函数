#######################append函数
append()函数用于在列表末尾添加新的对象。

#list = ['abc','Harden','python','Curry',123];  list.append(2009);  print('list(updated):',list)
#输出  ['abc','Harden','python','Curry',123,2009]

#####################sorted 函数




1.给定两个字符串 s1 和 s2，请编写一个程序，确定其中一个字符串的字符重新排列后，能否变成另一个字符串。

输入: s1 = "abc", s2 = "bca"      输出: true 
输入: s1 = "abc", s2 = "bad"      输出: false

2.给定两个字符串 s 和 t ，编写一个函数来判断 t 是否是 s 的字母异位词。

示例 1:
输入: s = "anagram", t = "nagaram"            输出: true

示例 2:
输入: s = "rat", t = "car"                   输出: false
tip:
根据题目的意思，字母异位词是指由相同的字母按照不同的顺序组成的单词，根据此含义，那么这两个单词的长度也一定相等，
所以我们就可以先将两个单词按照字母的大小进行排序，然后比较两个单词对应位置上的字母是否相等


class Solution:
    def CheckPermutation(self, s1: str, s2: str) -> bool:
        return sorted(s1)==sorted(s2)


给定两个数组，编写一个函数来计算它们的交集
输入: nums1 = [1,2,2,1], nums2 = [2,2]
输出: [2,2]


分析：先排序→后双指针比较:相同，加入到新的列表，不同

def intersect(self, nums1: List[int], nums2: List[int]) -> List[int]:
        nums1.sort()
        nums2.sort()
        r = []
        i = j = 0
        while i < len(nums1) and j < len(nums2):
            if nums1[i] == nums2[j]:
                r.append(nums1[i])
                i += 1
                j += 1
            elif nums1[i] < nums2[j]:
                i += 1
            else:
                j += 1
        return r





